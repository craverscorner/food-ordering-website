{"ast":null,"code":"var _jsxFileName = \"E:\\\\food-ordering-website\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport function useCart() {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function CartProvider({\n  children\n}) {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n\n  // Initialize cart from localStorage\n  useEffect(() => {\n    const initializeCart = () => {\n      try {\n        const stored = localStorage.getItem('cart');\n        if (stored) {\n          const parsedCart = JSON.parse(stored);\n          if (Array.isArray(parsedCart)) {\n            setCart(parsedCart);\n          }\n        }\n      } catch (err) {\n        console.error('Error initializing cart:', err);\n        setCart([]);\n      } finally {\n        setLoading(false);\n        setInitialized(true);\n      }\n    };\n    initializeCart();\n  }, []);\n\n  // Sync with Supabase when authenticated\n  useEffect(() => {\n    if (!initialized) return;\n    let mounted = true;\n    let timeoutId;\n    const syncWithSupabase = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (!user || !mounted) return;\n\n        // Get cart from Supabase\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('carts').select('*').eq('user_id', user.id).single();\n        if (fetchError && fetchError.code !== 'PGRST116') {\n          throw fetchError;\n        }\n        if (data && mounted) {\n          setCart(data.items || []);\n        }\n\n        // Save current cart to Supabase\n        const {\n          error: saveError\n        } = await supabase.from('carts').upsert({\n          user_id: user.id,\n          items: cart,\n          updated_at: new Date().toISOString()\n        }, {\n          onConflict: 'user_id'\n        });\n        if (saveError) throw saveError;\n      } catch (err) {\n        console.error('Error syncing cart with Supabase:', err);\n        if (mounted) {\n          setError(err.message);\n        }\n      }\n    };\n\n    // Debounce the sync operation\n    timeoutId = setTimeout(syncWithSupabase, 1000);\n    return () => {\n      mounted = false;\n      clearTimeout(timeoutId);\n    };\n  }, [cart, initialized]);\n\n  // Save to localStorage\n  useEffect(() => {\n    if (!initialized) return;\n    try {\n      localStorage.setItem('cart', JSON.stringify(cart));\n    } catch (err) {\n      console.error('Error saving cart to localStorage:', err);\n    }\n  }, [cart, initialized]);\n  const addToCart = item => {\n    if (!item || !item.id) {\n      console.error('Invalid item added to cart:', item);\n      return;\n    }\n    setCart(prev => {\n      const existingItem = prev.find(i => i.id === item.id);\n      if (existingItem) {\n        return prev.map(i => i.id === item.id ? {\n          ...i,\n          quantity: (i.quantity || 0) + 1\n        } : i);\n      }\n      return [...prev, {\n        ...item,\n        quantity: 1\n      }];\n    });\n  };\n  const removeFromCart = id => {\n    if (!id) {\n      console.error('Invalid item ID for removal:', id);\n      return;\n    }\n    setCart(prev => prev.filter(item => item.id !== id));\n  };\n  const updateQuantity = (id, quantity) => {\n    if (!id || quantity < 1) {\n      console.error('Invalid quantity update:', {\n        id,\n        quantity\n      });\n      return;\n    }\n    setCart(prev => prev.map(item => item.id === id ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCart([]);\n  };\n  const value = {\n    cart,\n    loading,\n    error,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart\n  };\n  if (!initialized) {\n    return null; // or a loading spinner\n  }\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s2(CartProvider, \"8H8uvDyH6wT4hW9UULXS4USPLYc=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","supabase","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cart","setCart","loading","setLoading","error","setError","initialized","setInitialized","initializeCart","stored","localStorage","getItem","parsedCart","JSON","parse","Array","isArray","err","console","mounted","timeoutId","syncWithSupabase","data","user","auth","getUser","fetchError","from","select","eq","id","single","code","items","saveError","upsert","user_id","updated_at","Date","toISOString","onConflict","message","setTimeout","clearTimeout","setItem","stringify","addToCart","item","prev","existingItem","find","i","map","quantity","removeFromCart","filter","updateQuantity","clearCart","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/food-ordering-website/client/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function useCart() {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function CartProvider({ children }) {\r\n  const [cart, setCart] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [initialized, setInitialized] = useState(false);\r\n\r\n  // Initialize cart from localStorage\r\n  useEffect(() => {\r\n    const initializeCart = () => {\r\n      try {\r\n        const stored = localStorage.getItem('cart');\r\n        if (stored) {\r\n          const parsedCart = JSON.parse(stored);\r\n          if (Array.isArray(parsedCart)) {\r\n            setCart(parsedCart);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Error initializing cart:', err);\r\n        setCart([]);\r\n      } finally {\r\n        setLoading(false);\r\n        setInitialized(true);\r\n      }\r\n    };\r\n\r\n    initializeCart();\r\n  }, []);\r\n\r\n  // Sync with Supabase when authenticated\r\n  useEffect(() => {\r\n    if (!initialized) return;\r\n\r\n    let mounted = true;\r\n    let timeoutId;\r\n\r\n    const syncWithSupabase = async () => {\r\n      try {\r\n        const { data: { user } } = await supabase.auth.getUser();\r\n        \r\n        if (!user || !mounted) return;\r\n\r\n        // Get cart from Supabase\r\n        const { data, error: fetchError } = await supabase\r\n          .from('carts')\r\n          .select('*')\r\n          .eq('user_id', user.id)\r\n          .single();\r\n\r\n        if (fetchError && fetchError.code !== 'PGRST116') {\r\n          throw fetchError;\r\n        }\r\n\r\n        if (data && mounted) {\r\n          setCart(data.items || []);\r\n        }\r\n\r\n        // Save current cart to Supabase\r\n        const { error: saveError } = await supabase\r\n          .from('carts')\r\n          .upsert({\r\n            user_id: user.id,\r\n            items: cart,\r\n            updated_at: new Date().toISOString()\r\n          }, {\r\n            onConflict: 'user_id'\r\n          });\r\n\r\n        if (saveError) throw saveError;\r\n\r\n      } catch (err) {\r\n        console.error('Error syncing cart with Supabase:', err);\r\n        if (mounted) {\r\n          setError(err.message);\r\n        }\r\n      }\r\n    };\r\n\r\n    // Debounce the sync operation\r\n    timeoutId = setTimeout(syncWithSupabase, 1000);\r\n\r\n    return () => {\r\n      mounted = false;\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [cart, initialized]);\r\n\r\n  // Save to localStorage\r\n  useEffect(() => {\r\n    if (!initialized) return;\r\n    \r\n    try {\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n    } catch (err) {\r\n      console.error('Error saving cart to localStorage:', err);\r\n    }\r\n  }, [cart, initialized]);\r\n\r\n  const addToCart = (item) => {\r\n    if (!item || !item.id) {\r\n      console.error('Invalid item added to cart:', item);\r\n      return;\r\n    }\r\n\r\n    setCart(prev => {\r\n      const existingItem = prev.find(i => i.id === item.id);\r\n      if (existingItem) {\r\n        return prev.map(i => \r\n          i.id === item.id \r\n            ? { ...i, quantity: (i.quantity || 0) + 1 }\r\n            : i\r\n        );\r\n      }\r\n      return [...prev, { ...item, quantity: 1 }];\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (id) => {\r\n    if (!id) {\r\n      console.error('Invalid item ID for removal:', id);\r\n      return;\r\n    }\r\n\r\n    setCart(prev => prev.filter(item => item.id !== id));\r\n  };\r\n\r\n  const updateQuantity = (id, quantity) => {\r\n    if (!id || quantity < 1) {\r\n      console.error('Invalid quantity update:', { id, quantity });\r\n      return;\r\n    }\r\n\r\n    setCart(prev => \r\n      prev.map(item => \r\n        item.id === id \r\n          ? { ...item, quantity }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  const value = {\r\n    cart,\r\n    loading,\r\n    error,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart\r\n  };\r\n\r\n  if (!initialized) {\r\n    return null; // or a loading spinner\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}