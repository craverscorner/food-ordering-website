{"ast":null,"code":"var _jsxFileName = \"E:\\\\food-ordering-website\\\\client\\\\src\\\\context\\\\MenuContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuContext = /*#__PURE__*/createContext();\nexport function useMenu() {\n  _s();\n  const context = useContext(MenuContext);\n  if (!context) {\n    throw new Error('useMenu must be used within a MenuProvider');\n  }\n  return context;\n}\n_s(useMenu, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function MenuProvider({\n  children\n}) {\n  _s2();\n  const [menuItems, setMenuItems] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch initial menu data\n  useEffect(() => {\n    const fetchMenuData = async () => {\n      try {\n        // Fetch categories\n        const {\n          data: categoriesData,\n          error: categoriesError\n        } = await supabase.from('categories').select('*').order('name');\n        if (categoriesError) throw categoriesError;\n        setCategories(categoriesData || []);\n\n        // Fetch menu items\n        const {\n          data: menuData,\n          error: menuError\n        } = await supabase.from('menu_items').select('*').order('name');\n        if (menuError) throw menuError;\n        setMenuItems(menuData || []);\n      } catch (err) {\n        console.error('Error fetching menu data:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMenuData();\n  }, []);\n\n  // Set up real-time subscriptions\n  useEffect(() => {\n    // Subscribe to menu items changes\n    const menuSubscription = supabase.channel('menu_items_changes').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'menu_items'\n    }, payload => {\n      if (payload.eventType === 'INSERT') {\n        setMenuItems(prev => [...prev, payload.new]);\n      } else if (payload.eventType === 'UPDATE') {\n        setMenuItems(prev => prev.map(item => item.id === payload.new.id ? payload.new : item));\n      } else if (payload.eventType === 'DELETE') {\n        setMenuItems(prev => prev.filter(item => item.id !== payload.old.id));\n      }\n    }).subscribe();\n\n    // Subscribe to categories changes\n    const categoriesSubscription = supabase.channel('categories_changes').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'categories'\n    }, payload => {\n      if (payload.eventType === 'INSERT') {\n        setCategories(prev => [...prev, payload.new]);\n      } else if (payload.eventType === 'UPDATE') {\n        setCategories(prev => prev.map(category => category.id === payload.new.id ? payload.new : category));\n      } else if (payload.eventType === 'DELETE') {\n        setCategories(prev => prev.filter(category => category.id !== payload.old.id));\n      }\n    }).subscribe();\n    return () => {\n      menuSubscription.unsubscribe();\n      categoriesSubscription.unsubscribe();\n    };\n  }, []);\n  const getItemsByCategory = categoryId => {\n    return menuItems.filter(item => item.category_id === categoryId);\n  };\n  const getItemById = id => {\n    return menuItems.find(item => item.id === id);\n  };\n  const value = {\n    menuItems,\n    categories,\n    loading,\n    error,\n    getItemsByCategory,\n    getItemById\n  };\n  return /*#__PURE__*/_jsxDEV(MenuContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s2(MenuProvider, \"a9Vv0wA2Vkrrmh0VEJTg5IqsUMA=\");\n_c = MenuProvider;\nvar _c;\n$RefreshReg$(_c, \"MenuProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","supabase","jsxDEV","_jsxDEV","MenuContext","useMenu","_s","context","Error","MenuProvider","children","_s2","menuItems","setMenuItems","categories","setCategories","loading","setLoading","error","setError","fetchMenuData","data","categoriesData","categoriesError","from","select","order","menuData","menuError","err","console","message","menuSubscription","channel","on","event","schema","table","payload","eventType","prev","new","map","item","id","filter","old","subscribe","categoriesSubscription","category","unsubscribe","getItemsByCategory","categoryId","category_id","getItemById","find","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/food-ordering-website/client/src/context/MenuContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nconst MenuContext = createContext();\r\n\r\nexport function useMenu() {\r\n  const context = useContext(MenuContext);\r\n  if (!context) {\r\n    throw new Error('useMenu must be used within a MenuProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function MenuProvider({ children }) {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch initial menu data\r\n  useEffect(() => {\r\n    const fetchMenuData = async () => {\r\n      try {\r\n        // Fetch categories\r\n        const { data: categoriesData, error: categoriesError } = await supabase\r\n          .from('categories')\r\n          .select('*')\r\n          .order('name');\r\n\r\n        if (categoriesError) throw categoriesError;\r\n        setCategories(categoriesData || []);\r\n\r\n        // Fetch menu items\r\n        const { data: menuData, error: menuError } = await supabase\r\n          .from('menu_items')\r\n          .select('*')\r\n          .order('name');\r\n\r\n        if (menuError) throw menuError;\r\n        setMenuItems(menuData || []);\r\n\r\n      } catch (err) {\r\n        console.error('Error fetching menu data:', err);\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMenuData();\r\n  }, []);\r\n\r\n  // Set up real-time subscriptions\r\n  useEffect(() => {\r\n    // Subscribe to menu items changes\r\n    const menuSubscription = supabase\r\n      .channel('menu_items_changes')\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: '*',\r\n          schema: 'public',\r\n          table: 'menu_items'\r\n        },\r\n        (payload) => {\r\n          if (payload.eventType === 'INSERT') {\r\n            setMenuItems(prev => [...prev, payload.new]);\r\n          } else if (payload.eventType === 'UPDATE') {\r\n            setMenuItems(prev => \r\n              prev.map(item => item.id === payload.new.id ? payload.new : item)\r\n            );\r\n          } else if (payload.eventType === 'DELETE') {\r\n            setMenuItems(prev => \r\n              prev.filter(item => item.id !== payload.old.id)\r\n            );\r\n          }\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    // Subscribe to categories changes\r\n    const categoriesSubscription = supabase\r\n      .channel('categories_changes')\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: '*',\r\n          schema: 'public',\r\n          table: 'categories'\r\n        },\r\n        (payload) => {\r\n          if (payload.eventType === 'INSERT') {\r\n            setCategories(prev => [...prev, payload.new]);\r\n          } else if (payload.eventType === 'UPDATE') {\r\n            setCategories(prev => \r\n              prev.map(category => category.id === payload.new.id ? payload.new : category)\r\n            );\r\n          } else if (payload.eventType === 'DELETE') {\r\n            setCategories(prev => \r\n              prev.filter(category => category.id !== payload.old.id)\r\n            );\r\n          }\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    return () => {\r\n      menuSubscription.unsubscribe();\r\n      categoriesSubscription.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const getItemsByCategory = (categoryId) => {\r\n    return menuItems.filter(item => item.category_id === categoryId);\r\n  };\r\n\r\n  const getItemById = (id) => {\r\n    return menuItems.find(item => item.id === id);\r\n  };\r\n\r\n  const value = {\r\n    menuItems,\r\n    categories,\r\n    loading,\r\n    error,\r\n    getItemsByCategory,\r\n    getItemById\r\n  };\r\n\r\n  return (\r\n    <MenuContext.Provider value={value}>\r\n      {children}\r\n    </MenuContext.Provider>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}