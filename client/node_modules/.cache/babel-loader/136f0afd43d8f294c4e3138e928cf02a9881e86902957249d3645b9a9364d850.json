{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{supabase}from'../supabaseClient';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export function useAuth(){return useContext(AuthContext);}export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Check active sessions and sets the user\nsupabase.auth.getSession().then(_ref2=>{var _session$user;let{data:{session}}=_ref2;setUser((_session$user=session===null||session===void 0?void 0:session.user)!==null&&_session$user!==void 0?_session$user:null);setLoading(false);});// Listen for changes on auth state (logged in, signed out, etc.)\nconst{data:{subscription}}=supabase.auth.onAuthStateChange((_event,session)=>{var _session$user2;setUser((_session$user2=session===null||session===void 0?void 0:session.user)!==null&&_session$user2!==void 0?_session$user2:null);setLoading(false);});return()=>subscription.unsubscribe();},[]);const value={user,loading,signUp:data=>supabase.auth.signUp(data),signIn:data=>supabase.auth.signInWithPassword(data),signOut:()=>supabase.auth.signOut(),resetPassword:email=>supabase.auth.resetPasswordForEmail(email),updatePassword:password=>supabase.auth.updateUser({password})};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","supabase","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","user","setUser","loading","setLoading","auth","getSession","then","_ref2","_session$user","data","session","subscription","onAuthStateChange","_event","_session$user2","unsubscribe","value","signUp","signIn","signInWithPassword","signOut","resetPassword","email","resetPasswordForEmail","updatePassword","password","updateUser","Provider"],"sources":["E:/food-ordering-website/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check active sessions and sets the user\r\n    supabase.auth.getSession().then(({ data: { session } }) => {\r\n      setUser(session?.user ?? null);\r\n      setLoading(false);\r\n    });\r\n\r\n    // Listen for changes on auth state (logged in, signed out, etc.)\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\r\n      setUser(session?.user ?? null);\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    signUp: (data) => supabase.auth.signUp(data),\r\n    signIn: (data) => supabase.auth.signInWithPassword(data),\r\n    signOut: () => supabase.auth.signOut(),\r\n    resetPassword: (email) => supabase.auth.resetPasswordForEmail(email),\r\n    updatePassword: (password) => supabase.auth.updateUser({ password }),\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n} "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OAASC,QAAQ,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7C,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,MAAO,SAAS,CAAAQ,OAAOA,CAAA,CAAG,CACxB,MAAO,CAAAP,UAAU,CAACM,WAAW,CAAC,CAChC,CAEA,MAAO,SAAS,CAAAE,YAAYA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd;AACAC,QAAQ,CAACY,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,IAAI,CAACC,KAAA,EAA2B,KAAAC,aAAA,IAA1B,CAAEC,IAAI,CAAE,CAAEC,OAAQ,CAAE,CAAC,CAAAH,KAAA,CACpDN,OAAO,EAAAO,aAAA,CAACE,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEV,IAAI,UAAAQ,aAAA,UAAAA,aAAA,CAAI,IAAI,CAAC,CAC9BL,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CAEF;AACA,KAAM,CAAEM,IAAI,CAAE,CAAEE,YAAa,CAAE,CAAC,CAAGnB,QAAQ,CAACY,IAAI,CAACQ,iBAAiB,CAAC,CAACC,MAAM,CAAEH,OAAO,GAAK,KAAAI,cAAA,CACtFb,OAAO,EAAAa,cAAA,CAACJ,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEV,IAAI,UAAAc,cAAA,UAAAA,cAAA,CAAI,IAAI,CAAC,CAC9BX,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CAEF,MAAO,IAAMQ,YAAY,CAACI,WAAW,CAAC,CAAC,CACzC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,KAAK,CAAG,CACZhB,IAAI,CACJE,OAAO,CACPe,MAAM,CAAGR,IAAI,EAAKjB,QAAQ,CAACY,IAAI,CAACa,MAAM,CAACR,IAAI,CAAC,CAC5CS,MAAM,CAAGT,IAAI,EAAKjB,QAAQ,CAACY,IAAI,CAACe,kBAAkB,CAACV,IAAI,CAAC,CACxDW,OAAO,CAAEA,CAAA,GAAM5B,QAAQ,CAACY,IAAI,CAACgB,OAAO,CAAC,CAAC,CACtCC,aAAa,CAAGC,KAAK,EAAK9B,QAAQ,CAACY,IAAI,CAACmB,qBAAqB,CAACD,KAAK,CAAC,CACpEE,cAAc,CAAGC,QAAQ,EAAKjC,QAAQ,CAACY,IAAI,CAACsB,UAAU,CAAC,CAAED,QAAS,CAAC,CACrE,CAAC,CAED,mBACE/B,IAAA,CAACC,WAAW,CAACgC,QAAQ,EAACX,KAAK,CAAEA,KAAM,CAAAjB,QAAA,CAChC,CAACG,OAAO,EAAIH,QAAQ,CACD,CAAC,CAE3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}