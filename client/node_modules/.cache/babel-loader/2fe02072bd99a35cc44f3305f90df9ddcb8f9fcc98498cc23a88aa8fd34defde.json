{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Container,Typography,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,CircularProgress,Alert,Box}from'@mui/material';import{supabase}from'../supabaseClient';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const OrderHistory=()=>{const[orders,setOrders]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const[userEmail,setUserEmail]=useState('');useEffect(()=>{const fetchOrders=async()=>{setLoading(true);setError('');try{// Get current user\nconst{data:{user},error:userError}=await supabase.auth.getUser();if(userError||!user){setError('You must be logged in to view your dashboard.');setLoading(false);return;}setUserEmail(user.email);// Fetch orders for this user\nconst{data:ordersData,error:ordersError}=await supabase.from('orders').select('*').eq('user_id',user.id).order('created_at',{ascending:false});if(ordersError)throw ordersError;setOrders(ordersData||[]);}catch(err){setError(err.message);}finally{setLoading(false);}};fetchOrders();},[]);return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",sx:{mt:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"My Dashboard\"}),userEmail&&/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,children:[\"Welcome, \",userEmail]}),loading?/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"40vh\",children:/*#__PURE__*/_jsx(CircularProgress,{})}):error?/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",sx:{mt:4,mb:2},children:\"Order History\"}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Order ID\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Items\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Total\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:orders.length===0?/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:5,align:\"center\",children:\"No orders found.\"})}):orders.map(order=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:order.id}),/*#__PURE__*/_jsx(TableCell,{children:new Date(order.created_at).toLocaleString()}),/*#__PURE__*/_jsx(TableCell,{children:order.items&&Array.isArray(order.items)?order.items.map((item,idx)=>/*#__PURE__*/_jsxs(\"div\",{children:[item.quantity,\"x \",item.name]},idx)):''}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:order.total!==undefined&&order.total!==null?order.total.toLocaleString('en-GB',{style:'currency',currency:'GBP'}):''}),/*#__PURE__*/_jsx(TableCell,{children:order.status})]},order.id))})]})})]})]});};export default OrderHistory;","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Alert","Box","supabase","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OrderHistory","orders","setOrders","loading","setLoading","error","setError","userEmail","setUserEmail","fetchOrders","data","user","userError","auth","getUser","email","ordersData","ordersError","from","select","eq","id","order","ascending","err","message","maxWidth","sx","mt","children","variant","component","gutterBottom","display","justifyContent","alignItems","minHeight","severity","mb","align","length","colSpan","map","Date","created_at","toLocaleString","items","Array","isArray","item","idx","quantity","name","total","undefined","style","currency","status"],"sources":["E:/food-ordering-website/client/src/pages/OrderHistory.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Alert, Box } from '@mui/material';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nconst OrderHistory = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      setLoading(true);\r\n      setError('');\r\n      try {\r\n        // Get current user\r\n        const { data: { user }, error: userError } = await supabase.auth.getUser();\r\n        if (userError || !user) {\r\n          setError('You must be logged in to view your dashboard.');\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        setUserEmail(user.email);\r\n        // Fetch orders for this user\r\n        const { data: ordersData, error: ordersError } = await supabase\r\n          .from('orders')\r\n          .select('*')\r\n          .eq('user_id', user.id)\r\n          .order('created_at', { ascending: false });\r\n        if (ordersError) throw ordersError;\r\n        setOrders(ordersData || []);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        My Dashboard\r\n      </Typography>\r\n      {userEmail && (\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Welcome, {userEmail}\r\n        </Typography>\r\n      )}\r\n      {loading ? (\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"40vh\">\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : error ? (\r\n        <Alert severity=\"error\">{error}</Alert>\r\n      ) : (\r\n        <>\r\n          <Typography variant=\"h5\" sx={{ mt: 4, mb: 2 }}>\r\n            Order History\r\n          </Typography>\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Order ID</TableCell>\r\n                  <TableCell>Date</TableCell>\r\n                  <TableCell>Items</TableCell>\r\n                  <TableCell align=\"right\">Total</TableCell>\r\n                  <TableCell>Status</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {orders.length === 0 ? (\r\n                  <TableRow>\r\n                    <TableCell colSpan={5} align=\"center\">No orders found.</TableCell>\r\n                  </TableRow>\r\n                ) : (\r\n                  orders.map((order) => (\r\n                    <TableRow key={order.id}>\r\n                      <TableCell>{order.id}</TableCell>\r\n                      <TableCell>{new Date(order.created_at).toLocaleString()}</TableCell>\r\n                      <TableCell>\r\n                        {order.items && Array.isArray(order.items)\r\n                          ? order.items.map((item, idx) => (\r\n                              <div key={idx}>{item.quantity}x {item.name}</div>\r\n                            ))\r\n                          : ''}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{order.total !== undefined && order.total !== null ? order.total.toLocaleString('en-GB', { style: 'currency', currency: 'GBP' }) : ''}</TableCell>\r\n                      <TableCell>{order.status}</TableCell>\r\n                    </TableRow>\r\n                  ))\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderHistory; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}