{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{supabase}from'../supabaseClient';import{jsx as _jsx}from\"react/jsx-runtime\";const MenuContext=/*#__PURE__*/createContext();export function useMenu(){const context=useContext(MenuContext);if(!context){throw new Error('useMenu must be used within a MenuProvider');}return context;}export function MenuProvider(_ref){let{children}=_ref;const[menuItems,setMenuItems]=useState([]);const[categories,setCategories]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[menuItemCategories,setMenuItemCategories]=useState([]);// join table\nconst[menuItemToCategories,setMenuItemToCategories]=useState({});// mapping\nconst[menuItemSubcategories,setMenuItemSubcategories]=useState([]);// join table for subcategories\nconst[categorySubcategoryLinks,setCategorySubcategoryLinks]=useState([]);// Fetch initial menu data\nuseEffect(()=>{const fetchMenuData=async()=>{try{// Fetch categories\nconst{data:categoriesData,error:categoriesError}=await supabase.from('categories').select('*').order('name');if(categoriesError)throw categoriesError;setCategories(categoriesData||[]);// Fetch menu items\nconst{data:menuData,error:menuError}=await supabase.from('menu_items').select('*').order('name');if(menuError)throw menuError;setMenuItems(menuData||[]);// Fetch menu_item_categories join table\nconst{data:micData,error:micError}=await supabase.from('menu_item_categories').select('*');if(micError)throw micError;setMenuItemCategories(micData||[]);// Build mapping\nconst mapping={};(micData||[]).forEach(link=>{if(!mapping[link.menu_item_id])mapping[link.menu_item_id]=[];mapping[link.menu_item_id].push(link.category_id);});setMenuItemToCategories(mapping);// Fetch menu_item_subcategories join table\nconst{data:miscData,error:miscError}=await supabase.from('menu_item_subcategories').select('*');if(miscError)throw miscError;setMenuItemSubcategories(miscData||[]);// Fetch category_subcategory_links\nconst{data:linksData,error:linksError}=await supabase.from('category_subcategory_links').select('*');if(linksError)throw linksError;setCategorySubcategoryLinks(linksData||[]);}catch(err){setError(err.message);}finally{setLoading(false);}};fetchMenuData();},[]);// Set up real-time subscriptions\nuseEffect(()=>{// Subscribe to menu items changes\nconst menuSubscription=supabase.channel('menu_items_changes').on('postgres_changes',{event:'*',schema:'public',table:'menu_items'},payload=>{if(payload.eventType==='INSERT'){setMenuItems(prev=>[...prev,payload.new]);}else if(payload.eventType==='UPDATE'){setMenuItems(prev=>prev.map(item=>item.id===payload.new.id?payload.new:item));}else if(payload.eventType==='DELETE'){setMenuItems(prev=>prev.filter(item=>item.id!==payload.old.id));}}).subscribe();// Subscribe to categories changes\nconst categoriesSubscription=supabase.channel('categories_changes').on('postgres_changes',{event:'*',schema:'public',table:'categories'},payload=>{if(payload.eventType==='INSERT'){setCategories(prev=>[...prev,payload.new]);}else if(payload.eventType==='UPDATE'){setCategories(prev=>prev.map(category=>category.id===payload.new.id?payload.new:category));}else if(payload.eventType==='DELETE'){setCategories(prev=>prev.filter(category=>category.id!==payload.old.id));}}).subscribe();return()=>{menuSubscription.unsubscribe();categoriesSubscription.unsubscribe();};},[]);// Helper: get all menu items for a given category using the join table\nconst getItemsForCategory=categoryId=>{// Find all menu_item_ids for this category\nconst menuItemIds=menuItemCategories.filter(link=>String(link.category_id)===String(categoryId)).map(link=>link.menu_item_id);// Return menu items that match\nreturn menuItems.filter(item=>menuItemIds.includes(item.id));};const getItemById=id=>{return menuItems.find(item=>item.id===id);};const value={menuItems,categories,loading,error,menuItemCategories,menuItemToCategories,menuItemSubcategories,categorySubcategoryLinks,getItemsForCategory,getItemById};return/*#__PURE__*/_jsx(MenuContext.Provider,{value:value,children:children});}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","supabase","jsx","_jsx","MenuContext","useMenu","context","Error","MenuProvider","_ref","children","menuItems","setMenuItems","categories","setCategories","loading","setLoading","error","setError","menuItemCategories","setMenuItemCategories","menuItemToCategories","setMenuItemToCategories","menuItemSubcategories","setMenuItemSubcategories","categorySubcategoryLinks","setCategorySubcategoryLinks","fetchMenuData","data","categoriesData","categoriesError","from","select","order","menuData","menuError","micData","micError","mapping","forEach","link","menu_item_id","push","category_id","miscData","miscError","linksData","linksError","err","message","menuSubscription","channel","on","event","schema","table","payload","eventType","prev","new","map","item","id","filter","old","subscribe","categoriesSubscription","category","unsubscribe","getItemsForCategory","categoryId","menuItemIds","String","includes","getItemById","find","value","Provider"],"sources":["E:/food-ordering-website/client/src/context/MenuContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nconst MenuContext = createContext();\r\n\r\nexport function useMenu() {\r\n  const context = useContext(MenuContext);\r\n  if (!context) {\r\n    throw new Error('useMenu must be used within a MenuProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function MenuProvider({ children }) {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [menuItemCategories, setMenuItemCategories] = useState([]); // join table\r\n  const [menuItemToCategories, setMenuItemToCategories] = useState({}); // mapping\r\n  const [menuItemSubcategories, setMenuItemSubcategories] = useState([]); // join table for subcategories\r\n  const [categorySubcategoryLinks, setCategorySubcategoryLinks] = useState([]);\r\n\r\n  // Fetch initial menu data\r\n  useEffect(() => {\r\n    const fetchMenuData = async () => {\r\n      try {\r\n        // Fetch categories\r\n        const { data: categoriesData, error: categoriesError } = await supabase\r\n          .from('categories')\r\n          .select('*')\r\n          .order('name');\r\n\r\n        if (categoriesError) throw categoriesError;\r\n        setCategories(categoriesData || []);\r\n\r\n        // Fetch menu items\r\n        const { data: menuData, error: menuError } = await supabase\r\n          .from('menu_items')\r\n          .select('*')\r\n          .order('name');\r\n\r\n        if (menuError) throw menuError;\r\n        setMenuItems(menuData || []);\r\n\r\n        // Fetch menu_item_categories join table\r\n        const { data: micData, error: micError } = await supabase\r\n          .from('menu_item_categories')\r\n          .select('*');\r\n        if (micError) throw micError;\r\n        setMenuItemCategories(micData || []);\r\n        // Build mapping\r\n        const mapping = {};\r\n        (micData || []).forEach(link => {\r\n          if (!mapping[link.menu_item_id]) mapping[link.menu_item_id] = [];\r\n          mapping[link.menu_item_id].push(link.category_id);\r\n        });\r\n        setMenuItemToCategories(mapping);\r\n\r\n        // Fetch menu_item_subcategories join table\r\n        const { data: miscData, error: miscError } = await supabase\r\n          .from('menu_item_subcategories')\r\n          .select('*');\r\n        if (miscError) throw miscError;\r\n        setMenuItemSubcategories(miscData || []);\r\n\r\n        // Fetch category_subcategory_links\r\n        const { data: linksData, error: linksError } = await supabase\r\n          .from('category_subcategory_links')\r\n          .select('*');\r\n        if (linksError) throw linksError;\r\n        setCategorySubcategoryLinks(linksData || []);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMenuData();\r\n  }, []);\r\n\r\n  // Set up real-time subscriptions\r\n  useEffect(() => {\r\n    // Subscribe to menu items changes\r\n    const menuSubscription = supabase\r\n      .channel('menu_items_changes')\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: '*',\r\n          schema: 'public',\r\n          table: 'menu_items'\r\n        },\r\n        (payload) => {\r\n          if (payload.eventType === 'INSERT') {\r\n            setMenuItems(prev => [...prev, payload.new]);\r\n          } else if (payload.eventType === 'UPDATE') {\r\n            setMenuItems(prev => \r\n              prev.map(item => item.id === payload.new.id ? payload.new : item)\r\n            );\r\n          } else if (payload.eventType === 'DELETE') {\r\n            setMenuItems(prev => \r\n              prev.filter(item => item.id !== payload.old.id)\r\n            );\r\n          }\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    // Subscribe to categories changes\r\n    const categoriesSubscription = supabase\r\n      .channel('categories_changes')\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: '*',\r\n          schema: 'public',\r\n          table: 'categories'\r\n        },\r\n        (payload) => {\r\n          if (payload.eventType === 'INSERT') {\r\n            setCategories(prev => [...prev, payload.new]);\r\n          } else if (payload.eventType === 'UPDATE') {\r\n            setCategories(prev => \r\n              prev.map(category => category.id === payload.new.id ? payload.new : category)\r\n            );\r\n          } else if (payload.eventType === 'DELETE') {\r\n            setCategories(prev => \r\n              prev.filter(category => category.id !== payload.old.id)\r\n            );\r\n          }\r\n        }\r\n      )\r\n      .subscribe();\r\n\r\n    return () => {\r\n      menuSubscription.unsubscribe();\r\n      categoriesSubscription.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  // Helper: get all menu items for a given category using the join table\r\n  const getItemsForCategory = (categoryId) => {\r\n    // Find all menu_item_ids for this category\r\n    const menuItemIds = menuItemCategories\r\n      .filter(link => String(link.category_id) === String(categoryId))\r\n      .map(link => link.menu_item_id);\r\n    // Return menu items that match\r\n    return menuItems.filter(item => menuItemIds.includes(item.id));\r\n  };\r\n\r\n  const getItemById = (id) => {\r\n    return menuItems.find(item => item.id === id);\r\n  };\r\n\r\n  const value = {\r\n    menuItems,\r\n    categories,\r\n    loading,\r\n    error,\r\n    menuItemCategories,\r\n    menuItemToCategories,\r\n    menuItemSubcategories,\r\n    categorySubcategoryLinks,\r\n    getItemsForCategory,\r\n    getItemById\r\n  };\r\n\r\n  return (\r\n    <MenuContext.Provider value={value}>\r\n      {children}\r\n    </MenuContext.Provider>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}