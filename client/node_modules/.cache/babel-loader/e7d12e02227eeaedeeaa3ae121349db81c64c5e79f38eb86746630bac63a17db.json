{"ast":null,"code":"var _jsxFileName = \"E:\\\\food-ordering-website\\\\client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, TextField, Button, Box, Link, Alert } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    if (!name || !email || !password || !confirmPassword) {\n      setError('Please fill in all fields.');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return;\n    }\n    setLoading(true);\n    const {\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: {\n          name\n        }\n      }\n    });\n    setLoading(false);\n    if (error) {\n      setError(error.message);\n    } else {\n      setSuccess('Registration successful! Please check your email to confirm your account.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        mt: 3\n      },\n      onSubmit: handleSubmit,\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"name\",\n        label: \"Full Name\",\n        name: \"name\",\n        autoComplete: \"name\",\n        autoFocus: true,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        autoComplete: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"new-password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"confirmPassword\",\n        label: \"Confirm Password\",\n        type: \"password\",\n        id: \"confirmPassword\",\n        autoComplete: \"new-password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        disabled: loading,\n        children: loading ? 'Signing Up...' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          component: RouterLink,\n          to: \"/login\",\n          variant: \"body2\",\n          children: \"Already have an account? Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"COwF2FsmBGj95/4JKBw+5DsOYRs=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Container","Typography","TextField","Button","Box","Link","Alert","RouterLink","supabase","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","loading","setLoading","handleSubmit","e","preventDefault","auth","signUp","options","data","message","maxWidth","sx","mt","children","variant","component","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","severity","margin","required","fullWidth","id","label","autoComplete","autoFocus","value","onChange","target","type","mb","disabled","textAlign","to","_c","$RefreshReg$"],"sources":["E:/food-ordering-website/client/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Typography, TextField, Button, Box, Link, Alert } from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nconst Register = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    if (!name || !email || !password || !confirmPassword) {\r\n      setError('Please fill in all fields.');\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const { error } = await supabase.auth.signUp({\r\n      email,\r\n      password,\r\n      options: { data: { name } }\r\n    });\r\n    setLoading(false);\r\n    if (error) {\r\n      setError(error.message);\r\n    } else {\r\n      setSuccess('Registration successful! Please check your email to confirm your account.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ mt: 8 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\r\n        Register\r\n      </Typography>\r\n      <Box component=\"form\" sx={{ mt: 3 }} onSubmit={handleSubmit}>\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n        {success && <Alert severity=\"success\">{success}</Alert>}\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"name\"\r\n          label=\"Full Name\"\r\n          name=\"name\"\r\n          autoComplete=\"name\"\r\n          autoFocus\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"new-password\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"confirmPassword\"\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          id=\"confirmPassword\"\r\n          autoComplete=\"new-password\"\r\n          value={confirmPassword}\r\n          onChange={e => setConfirmPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Signing Up...' : 'Sign Up'}\r\n        </Button>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <Link component={RouterLink} to=\"/login\" variant=\"body2\">\r\n            {\"Already have an account? Sign In\"}\r\n          </Link>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}