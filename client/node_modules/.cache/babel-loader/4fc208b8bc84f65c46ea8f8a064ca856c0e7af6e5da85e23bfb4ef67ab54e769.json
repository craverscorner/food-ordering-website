{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\nasync function makeCurrentUserAdmin() {\n  const {\n    data: {\n      user\n    }\n  } = await supabase.auth.getUser();\n  console.log(user.id);\n  if (user) {\n    const {\n      error\n    } = await supabase.from('profiles').update({\n      role: 'admin'\n    }).eq('id', user.id);\n    if (error) {\n      console.error('Error making user admin:', error.message);\n    } else {\n      alert('User is now admin!');\n    }\n    console.log('User id:', user.id);\n  }\n}\nasync function makeUserAdmin(userId) {\n  const {\n    error\n  } = await supabase.from('profiles').update({\n    role: 'admin'\n  }).eq('id', userId);\n  if (error) {\n    alert('Error: ' + error.message);\n  } else {\n    alert('User is now admin!');\n  }\n}","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","makeCurrentUserAdmin","data","user","auth","getUser","console","log","id","error","from","update","role","eq","message","alert","makeUserAdmin","userId"],"sources":["E:/food-ordering-website/client/src/supabaseClient.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n\r\nasync function makeCurrentUserAdmin() {\r\n  const { data: { user } } = await supabase.auth.getUser();\r\n  console.log(user.id);\r\n  if (user) {\r\n    const { error } = await supabase\r\n      .from('profiles')\r\n      .update({ role: 'admin' })\r\n      .eq('id', user.id);\r\n    if (error) {\r\n      console.error('Error making user admin:', error.message);\r\n    } else {\r\n      alert('User is now admin!');\r\n    }\r\n    console.log('User id:', user.id);\r\n  }\r\n}\r\n\r\nasync function makeUserAdmin(userId) {\r\n  const { error } = await supabase\r\n    .from('profiles')\r\n    .update({ role: 'admin' })\r\n    .eq('id', userId);\r\n  if (error) {\r\n    alert('Error: ' + error.message);\r\n  } else {\r\n    alert('User is now admin!');\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AACtD,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B;AAE/D,OAAO,MAAMC,QAAQ,GAAGP,YAAY,CAACC,WAAW,EAAEI,eAAe,CAAC;AAElE,eAAeG,oBAAoBA,CAAA,EAAG;EACpC,MAAM;IAAEC,IAAI,EAAE;MAAEC;IAAK;EAAE,CAAC,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC;EACxDC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACK,EAAE,CAAC;EACpB,IAAIL,IAAI,EAAE;IACR,MAAM;MAAEM;IAAM,CAAC,GAAG,MAAMT,QAAQ,CAC7BU,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC,CACzBC,EAAE,CAAC,IAAI,EAAEV,IAAI,CAACK,EAAE,CAAC;IACpB,IAAIC,KAAK,EAAE;MACTH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACK,OAAO,CAAC;IAC1D,CAAC,MAAM;MACLC,KAAK,CAAC,oBAAoB,CAAC;IAC7B;IACAT,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEJ,IAAI,CAACK,EAAE,CAAC;EAClC;AACF;AAEA,eAAeQ,aAAaA,CAACC,MAAM,EAAE;EACnC,MAAM;IAAER;EAAM,CAAC,GAAG,MAAMT,QAAQ,CAC7BU,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,CAAC,CACzBC,EAAE,CAAC,IAAI,EAAEI,MAAM,CAAC;EACnB,IAAIR,KAAK,EAAE;IACTM,KAAK,CAAC,SAAS,GAAGN,KAAK,CAACK,OAAO,CAAC;EAClC,CAAC,MAAM;IACLC,KAAK,CAAC,oBAAoB,CAAC;EAC7B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}