{"ast":null,"code":"var _jsxFileName = \"E:\\\\food-ordering-website\\\\client\\\\src\\\\pages\\\\AdminOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, IconButton, Box, CircularProgress, Alert, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport { supabase } from '../supabaseClient';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminOrders = () => {\n  _s();\n  var _selectedOrder$profil, _selectedOrder$total;\n  const [orders, setOrders] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedOrder, setSelectedOrder] = useState(null);\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\n  const fetchOrders = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Fetch orders\n      const {\n        data: ordersData,\n        error: ordersError\n      } = await supabase.from('orders').select('*').order('created_at', {\n        ascending: false\n      });\n      if (ordersError) throw ordersError;\n\n      // Fetch all profiles\n      const {\n        data: profilesData,\n        error: profilesError\n      } = await supabase.from('profiles').select('id, email');\n      if (profilesError) throw profilesError;\n\n      // Join orders with profiles in the frontend\n      const ordersWithProfiles = ordersData.map(order => ({\n        ...order,\n        profiles: profilesData.find(profile => profile.id === order.user_id)\n      }));\n      setOrders(ordersWithProfiles);\n    } catch (err) {\n      console.error('Error fetching orders:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  const updateOrderStatus = async (orderId, newStatus) => {\n    try {\n      const {\n        error\n      } = await supabase.from('orders').update({\n        status: newStatus\n      }).eq('id', orderId);\n      if (error) throw error;\n      fetchOrders(); // Refresh orders after update\n    } catch (err) {\n      console.error('Error updating order:', err);\n      setError(err.message);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'completed':\n        return 'success';\n      case 'cancelled':\n        return 'error';\n      case 'processing':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n  const handleViewOrder = order => {\n    setSelectedOrder(order);\n    setViewDialogOpen(true);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"60vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Order Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: fetchOrders,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Order ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: orders.map(order => {\n            var _order$profiles, _order$total;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: order.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: ((_order$profiles = order.profiles) === null || _order$profiles === void 0 ? void 0 : _order$profiles.email) || 'Guest'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: (_order$total = order.total) === null || _order$total === void 0 ? void 0 : _order$total.toLocaleString('en-GB', {\n                  style: 'currency',\n                  currency: 'GBP'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: order.status,\n                  color: getStatusColor(order.status),\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(order.created_at).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"primary\",\n                    onClick: () => handleViewOrder(order),\n                    size: \"small\",\n                    children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 21\n                  }, this), order.status === 'processing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"success\",\n                      onClick: () => updateOrderStatus(order.id, 'completed'),\n                      size: \"small\",\n                      children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"error\",\n                      onClick: () => updateOrderStatus(order.id, 'cancelled'),\n                      size: \"small\",\n                      children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)]\n            }, order.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: viewDialogOpen,\n      onClose: () => setViewDialogOpen(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Order Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: selectedOrder && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [\"Order ID: \", selectedOrder.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [\"Customer: \", ((_selectedOrder$profil = selectedOrder.profiles) === null || _selectedOrder$profil === void 0 ? void 0 : _selectedOrder$profil.email) || 'Guest']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [\"Date: \", new Date(selectedOrder.created_at).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [\"Status: \", selectedOrder.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: [\"Total: \", (_selectedOrder$total = selectedOrder.total) === null || _selectedOrder$total === void 0 ? void 0 : _selectedOrder$total.toLocaleString('en-GB', {\n              style: 'currency',\n              currency: 'GBP'\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mt: 2,\n              mb: 1\n            },\n            children: \"Items:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Item\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Subtotal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: selectedOrder.items.map((item, index) => {\n                  var _item$price, _ref;\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: item.quantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: (_item$price = item.price) === null || _item$price === void 0 ? void 0 : _item$price.toLocaleString('en-GB', {\n                        style: 'currency',\n                        currency: 'GBP'\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: (_ref = item.price * item.quantity) === null || _ref === void 0 ? void 0 : _ref.toLocaleString('en-GB', {\n                        style: 'currency',\n                        currency: 'GBP'\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 25\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setViewDialogOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminOrders, \"goSggwCLrx6IluFjpVCheSovDno=\");\n_c = AdminOrders;\nexport default AdminOrders;\nvar _c;\n$RefreshReg$(_c, \"AdminOrders\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Chip","IconButton","Box","CircularProgress","Alert","Button","Dialog","DialogTitle","DialogContent","DialogActions","supabase","RefreshIcon","CheckCircleIcon","CancelIcon","VisibilityIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminOrders","_s","_selectedOrder$profil","_selectedOrder$total","orders","setOrders","users","setUsers","loading","setLoading","error","setError","selectedOrder","setSelectedOrder","viewDialogOpen","setViewDialogOpen","fetchOrders","data","ordersData","ordersError","from","select","order","ascending","profilesData","profilesError","ordersWithProfiles","map","profiles","find","profile","id","user_id","err","console","message","updateOrderStatus","orderId","newStatus","update","status","eq","getStatusColor","handleViewOrder","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","mt","mb","variant","component","onClick","color","severity","_order$profiles","_order$total","email","total","toLocaleString","style","currency","label","size","Date","created_at","gap","open","onClose","fullWidth","gutterBottom","items","item","index","_item$price","_ref","name","quantity","price","_c","$RefreshReg$"],"sources":["E:/food-ordering-website/client/src/pages/AdminOrders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Chip,\r\n  IconButton,\r\n  Box,\r\n  CircularProgress,\r\n  Alert,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from '@mui/material';\r\nimport { supabase } from '../supabaseClient';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n\r\nconst AdminOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedOrder, setSelectedOrder] = useState(null);\r\n  const [viewDialogOpen, setViewDialogOpen] = useState(false);\r\n\r\n  const fetchOrders = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Fetch orders\r\n      const { data: ordersData, error: ordersError } = await supabase\r\n        .from('orders')\r\n        .select('*')\r\n        .order('created_at', { ascending: false });\r\n      if (ordersError) throw ordersError;\r\n\r\n      // Fetch all profiles\r\n      const { data: profilesData, error: profilesError } = await supabase\r\n        .from('profiles')\r\n        .select('id, email');\r\n      if (profilesError) throw profilesError;\r\n\r\n      // Join orders with profiles in the frontend\r\n      const ordersWithProfiles = ordersData.map(order => ({\r\n        ...order,\r\n        profiles: profilesData.find(profile => profile.id === order.user_id)\r\n      }));\r\n\r\n      setOrders(ordersWithProfiles);\r\n    } catch (err) {\r\n      console.error('Error fetching orders:', err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const updateOrderStatus = async (orderId, newStatus) => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('orders')\r\n        .update({ status: newStatus })\r\n        .eq('id', orderId);\r\n\r\n      if (error) throw error;\r\n      fetchOrders(); // Refresh orders after update\r\n    } catch (err) {\r\n      console.error('Error updating order:', err);\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'success';\r\n      case 'cancelled':\r\n        return 'error';\r\n      case 'processing':\r\n        return 'warning';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const handleViewOrder = (order) => {\r\n    setSelectedOrder(order);\r\n    setViewDialogOpen(true);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          Order Management\r\n        </Typography>\r\n        <IconButton onClick={fetchOrders} color=\"primary\">\r\n          <RefreshIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Order ID</TableCell>\r\n              <TableCell>Customer</TableCell>\r\n              <TableCell>Total</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders.map((order) => (\r\n              <TableRow key={order.id}>\r\n                <TableCell>{order.id}</TableCell>\r\n                <TableCell>\r\n                  {order.profiles?.email || 'Guest'}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {order.total?.toLocaleString('en-GB', { style: 'currency', currency: 'GBP' })}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label={order.status}\r\n                    color={getStatusColor(order.status)}\r\n                    size=\"small\"\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  {new Date(order.created_at).toLocaleString()}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Box sx={{ display: 'flex', gap: 1 }}>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={() => handleViewOrder(order)}\r\n                      size=\"small\"\r\n                    >\r\n                      <VisibilityIcon />\r\n                    </IconButton>\r\n                    {order.status === 'processing' && (\r\n                      <>\r\n                        <IconButton\r\n                          color=\"success\"\r\n                          onClick={() => updateOrderStatus(order.id, 'completed')}\r\n                          size=\"small\"\r\n                        >\r\n                          <CheckCircleIcon />\r\n                        </IconButton>\r\n                        <IconButton\r\n                          color=\"error\"\r\n                          onClick={() => updateOrderStatus(order.id, 'cancelled')}\r\n                          size=\"small\"\r\n                        >\r\n                          <CancelIcon />\r\n                        </IconButton>\r\n                      </>\r\n                    )}\r\n                  </Box>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {/* Order Details Dialog */}\r\n      <Dialog\r\n        open={viewDialogOpen}\r\n        onClose={() => setViewDialogOpen(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Order Details</DialogTitle>\r\n        <DialogContent>\r\n          {selectedOrder && (\r\n            <Box sx={{ mt: 2 }}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Order ID: {selectedOrder.id}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Customer: {selectedOrder.profiles?.email || 'Guest'}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Date: {new Date(selectedOrder.created_at).toLocaleString()}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Status: {selectedOrder.status}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Total: {selectedOrder.total?.toLocaleString('en-GB', { style: 'currency', currency: 'GBP' })}\r\n              </Typography>\r\n              <Typography variant=\"h6\" sx={{ mt: 2, mb: 1 }}>\r\n                Items:\r\n              </Typography>\r\n              <TableContainer>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Item</TableCell>\r\n                      <TableCell>Quantity</TableCell>\r\n                      <TableCell>Price</TableCell>\r\n                      <TableCell>Subtotal</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {selectedOrder.items.map((item, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>{item.name}</TableCell>\r\n                        <TableCell>{item.quantity}</TableCell>\r\n                        <TableCell>\r\n                          {item.price?.toLocaleString('en-GB', { style: 'currency', currency: 'GBP' })}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {(item.price * item.quantity)?.toLocaleString('en-GB', { style: 'currency', currency: 'GBP' })}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setViewDialogOpen(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminOrders; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}