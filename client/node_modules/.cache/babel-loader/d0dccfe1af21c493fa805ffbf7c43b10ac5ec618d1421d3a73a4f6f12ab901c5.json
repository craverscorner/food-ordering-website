{"ast":null,"code":"import React,{useState}from'react';import{Container,Typography,TextField,Button,Box,Link,Alert}from'@mui/material';import{Link as RouterLink}from'react-router-dom';import{supabase}from'../supabaseClient';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[error,setError]=useState('');const[success,setSuccess]=useState('');const[loading,setLoading]=useState(false);const handleSubmit=async e=>{e.preventDefault();setError('');setSuccess('');if(!email||!password||!confirmPassword){setError('Please fill in all fields.');return;}if(password!==confirmPassword){setError('Passwords do not match.');return;}setLoading(true);const{error}=await supabase.auth.signUp({email,password});setLoading(false);if(error){setError(error.message);}else{setSuccess('Registration successful! Please check your email to confirm your account.');}};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"sm\",sx:{mt:8},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",align:\"center\",gutterBottom:true,children:\"Register\"}),/*#__PURE__*/_jsxs(Box,{component:\"form\",sx:{mt:3},onSubmit:handleSubmit,children:[error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:error}),success&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",children:success}),/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,id:\"email\",label:\"Email Address\",name:\"email\",autoComplete:\"email\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,name:\"password\",label:\"Password\",type:\"password\",id:\"password\",autoComplete:\"new-password\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,name:\"confirmPassword\",label:\"Confirm Password\",type:\"password\",id:\"confirmPassword\",autoComplete:\"new-password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value)}),/*#__PURE__*/_jsx(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",sx:{mt:3,mb:2},disabled:loading,children:loading?'Signing Up...':'Sign Up'}),/*#__PURE__*/_jsx(Box,{sx:{textAlign:'center'},children:/*#__PURE__*/_jsx(Link,{component:RouterLink,to:\"/login\",variant:\"body2\",children:\"Already have an account? Sign In\"})})]})]});};export default Register;","map":{"version":3,"names":["React","useState","Container","Typography","TextField","Button","Box","Link","Alert","RouterLink","supabase","jsx","_jsx","jsxs","_jsxs","Register","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","loading","setLoading","handleSubmit","e","preventDefault","auth","signUp","message","maxWidth","sx","mt","children","variant","component","align","gutterBottom","onSubmit","severity","margin","required","fullWidth","id","label","name","autoComplete","value","onChange","target","type","mb","disabled","textAlign","to"],"sources":["E:/food-ordering-website/client/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Typography, TextField, Button, Box, Link, Alert } from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    if (!email || !password || !confirmPassword) {\r\n      setError('Please fill in all fields.');\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const { error } = await supabase.auth.signUp({\r\n      email,\r\n      password\r\n    });\r\n    setLoading(false);\r\n    if (error) {\r\n      setError(error.message);\r\n    } else {\r\n      setSuccess('Registration successful! Please check your email to confirm your account.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ mt: 8 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\r\n        Register\r\n      </Typography>\r\n      <Box component=\"form\" sx={{ mt: 3 }} onSubmit={handleSubmit}>\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n        {success && <Alert severity=\"success\">{success}</Alert>}\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"new-password\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"confirmPassword\"\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          id=\"confirmPassword\"\r\n          autoComplete=\"new-password\"\r\n          value={confirmPassword}\r\n          onChange={e => setConfirmPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Signing Up...' : 'Sign Up'}\r\n        </Button>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <Link component={RouterLink} to=\"/login\" variant=\"body2\">\r\n            {\"Already have an account? Sign In\"}\r\n          </Link>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}