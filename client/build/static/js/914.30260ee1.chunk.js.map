{"version":3,"file":"static/js/914.30260ee1.chunk.js","mappings":"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","sources":["pages/Cart.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Container, Typography, Box, Button, Grid, Card, CardContent, IconButton, Alert, Snackbar, TextField, InputAdornment, CircularProgress, Divider, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\r\nimport { useCart } from '../context/CartContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport { supabase } from '../supabaseClient';\r\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements, PaymentElement, PaymentRequestButtonElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\n// Initialize Stripe with the publishable key\r\nconst stripePromise = loadStripe('pk_live_51OwkuOP1ZtCJfXVW0FBHdfBnAo20fxfcQn3BIhBGrLhwT8N8Wg63wo3xVeM5RBPb74ATFlblRLawwiBptNauajHP00l5LoeOzz');\r\n\r\n// Payment Form Component\r\nconst PaymentForm = ({ userInfo, onSuccess, onError, totalPence }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [paymentRequest, setPaymentRequest] = useState(null);\r\n  const [isReady, setIsReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (stripe && totalPence > 0) {\r\n      const pr = stripe.paymentRequest({\r\n        country: 'GB',\r\n        currency: 'gbp',\r\n        total: {\r\n          label: 'Total',\r\n          amount: totalPence,\r\n        },\r\n        requestPayerName: true,\r\n        requestPayerEmail: true,\r\n      });\r\n      pr.canMakePayment().then(result => {\r\n        if (result) {\r\n          setPaymentRequest(pr);\r\n        }\r\n      });\r\n    }\r\n  }, [stripe, totalPence]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!stripe || !elements) {\r\n      setError('Please wait while we load the payment form...');\r\n      return;\r\n    }\r\n    setProcessing(true);\r\n    setError(null);\r\n    try {\r\n      const { error: submitError } = await stripe.confirmPayment({\r\n        elements,\r\n        confirmParams: {\r\n          return_url: `${window.location.origin}/success`,\r\n          receipt_email: userInfo.email,\r\n          shipping: {\r\n            name: userInfo.name,\r\n            address: {\r\n              line1: userInfo.address,\r\n              city: userInfo.city,\r\n              postal_code: userInfo.postalCode,\r\n              country: userInfo.country,\r\n            },\r\n          },\r\n        },\r\n      });\r\n      if (submitError) {\r\n        setError(submitError.message);\r\n        onError(submitError);\r\n      } else {\r\n        onSuccess();\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n      onError(err);\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      {paymentRequest ? (\r\n        <Box sx={{ mb: 2 }}>\r\n          <PaymentRequestButtonElement options={{ paymentRequest }} />\r\n          <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n            You can pay with Apple Pay or Google Pay if available on your device/browser.\r\n          </Typography>\r\n        </Box>\r\n      ) : null}\r\n      <form onSubmit={handleSubmit} style={{ width: '100%' }}>\r\n        <Box sx={{ mb: 2 }}>\r\n          <PaymentElement \r\n            onReady={() => {\r\n              console.log('PaymentElement is ready');\r\n              setIsReady(true);\r\n            }}\r\n            onChange={(e) => {\r\n              console.log('PaymentElement changed:', e);\r\n              setError(null);\r\n            }}\r\n            options={{\r\n              layout: {\r\n                type: 'tabs',\r\n                defaultCollapsed: false,\r\n              },\r\n            }}\r\n          />\r\n        </Box>\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          disabled={processing || !isReady}\r\n          sx={{ mt: 2 }}\r\n        >\r\n          {processing ? <CircularProgress size={24} /> : 'Pay Now'}\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Cart = () => {\r\n  const { cart, removeFromCart, updateQuantity, clearCart } = useCart();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [couponCode, setCouponCode] = useState('');\r\n  const [appliedCoupon, setAppliedCoupon] = useState(null);\r\n  const [couponError, setCouponError] = useState('');\r\n  const [isCheckingCoupon, setIsCheckingCoupon] = useState(false);\r\n  const [couponStatus, setCouponStatus] = useState(null);\r\n  const [validatedCoupon, setValidatedCoupon] = useState(null);\r\n  const [showPaymentDialog, setShowPaymentDialog] = useState(false);\r\n  const [clientSecret, setClientSecret] = useState(null);\r\n  const [userInfo, setUserInfo] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    address: '',\r\n    city: '',\r\n    postalCode: '',\r\n    country: 'GB',\r\n  });\r\n\r\n  // Calculate subtotal\r\n  const calculateSubtotal = () => {\r\n    return Number(cart.reduce((sum, item) => {\r\n      const itemTotal = Number(item.price) * Number(item.quantity);\r\n      return sum + Number(itemTotal.toFixed(2));\r\n    }, 0).toFixed(2));\r\n  };\r\n\r\n  // Calculate discount amount\r\n  const calculateDiscount = (coupon) => {\r\n    if (!coupon) return 0;\r\n    const subtotal = calculateSubtotal();\r\n    let discount = 0;\r\n    \r\n    if (coupon.discount_type === 'percentage') {\r\n      discount = Number((subtotal * Number(coupon.discount_value) / 100).toFixed(2));\r\n      if (coupon.max_discount) {\r\n        discount = Math.min(discount, Number(coupon.max_discount));\r\n      }\r\n    } else {\r\n      discount = Math.min(Number(coupon.discount_value), subtotal);\r\n    }\r\n    \r\n    return Number(discount.toFixed(2));\r\n  };\r\n\r\n  // Calculate total\r\n  const calculateTotal = () => {\r\n    const subtotal = calculateSubtotal();\r\n    const coupon = appliedCoupon || validatedCoupon;\r\n    const discount = calculateDiscount(coupon);\r\n    return Number((subtotal - discount).toFixed(2));\r\n  };\r\n\r\n  // Format amount for Stripe (convert to pence)\r\n  const formatAmountForStripe = (amount) => {\r\n    // Convert to pence and ensure it's an integer\r\n    const amountInPence = Math.round(Number(amount) * 100);\r\n    if (!Number.isInteger(amountInPence) || amountInPence < 0) {\r\n      throw new Error(`Invalid amount: ${amount}`);\r\n    }\r\n    return amountInPence;\r\n  };\r\n\r\n  // Debounced coupon check\r\n  const debouncedCheckCoupon = useCallback(\r\n    async (code) => {\r\n      if (!code) {\r\n        setCouponStatus(null);\r\n        setCouponError('');\r\n        setValidatedCoupon(null);\r\n        return;\r\n      }\r\n\r\n      setIsCheckingCoupon(true);\r\n      try {\r\n        const { data, error } = await supabase\r\n          .from('coupons')\r\n          .select('*')\r\n          .ilike('code', code.toUpperCase())\r\n          .eq('is_active', true)\r\n          .single();\r\n\r\n        if (error) {\r\n          if (error.code === 'PGRST116') {\r\n            setCouponStatus('invalid');\r\n            setCouponError('Invalid coupon code');\r\n            setValidatedCoupon(null);\r\n          } else {\r\n            throw error;\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (!data) {\r\n          setCouponStatus('invalid');\r\n          setCouponError('Invalid coupon code');\r\n          setValidatedCoupon(null);\r\n          return;\r\n        }\r\n\r\n        // Check if coupon is valid\r\n        const now = new Date();\r\n        const startDate = new Date(data.start_date);\r\n        const endDate = new Date(data.end_date);\r\n\r\n        if (now < startDate || now > endDate) {\r\n          setCouponStatus('invalid');\r\n          setCouponError('Coupon is not valid at this time');\r\n          setValidatedCoupon(null);\r\n          return;\r\n        }\r\n\r\n        // Check minimum order amount\r\n        const subtotal = calculateSubtotal();\r\n        if (data.min_order_amount && subtotal < data.min_order_amount) {\r\n          setCouponStatus('invalid');\r\n          setCouponError(`Minimum order amount is £${data.min_order_amount}`);\r\n          setValidatedCoupon(null);\r\n          return;\r\n        }\r\n\r\n        setCouponStatus('valid');\r\n        setCouponError('');\r\n        setValidatedCoupon(data);\r\n      } catch (err) {\r\n        console.error('Coupon check error:', err);\r\n        setCouponStatus('invalid');\r\n        setCouponError(err.message);\r\n        setValidatedCoupon(null);\r\n      } finally {\r\n        setIsCheckingCoupon(false);\r\n      }\r\n    },\r\n    [cart]\r\n  );\r\n\r\n  // Set up debounced effect\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      debouncedCheckCoupon(couponCode);\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [couponCode, debouncedCheckCoupon]);\r\n\r\n  const handleApplyCoupon = async () => {\r\n    if (couponStatus !== 'valid') return;\r\n    setAppliedCoupon(validatedCoupon);\r\n  };\r\n\r\n  const handleRemoveCoupon = () => {\r\n    setAppliedCoupon(null);\r\n    setValidatedCoupon(null);\r\n    setCouponCode('');\r\n    setCouponStatus(null);\r\n    setCouponError('');\r\n  };\r\n\r\n  const handleCheckout = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      \r\n      const subtotal = calculateSubtotal();\r\n      const coupon = appliedCoupon || validatedCoupon;\r\n      const discount = calculateDiscount(coupon);\r\n      const finalTotal = calculateTotal();\r\n      \r\n      if (subtotal <= 0) {\r\n        throw new Error('Invalid order amount');\r\n      }\r\n      \r\n      if (discount < 0 || discount > subtotal) {\r\n        throw new Error('Invalid discount amount');\r\n      }\r\n      \r\n      if (finalTotal <= 0) {\r\n        throw new Error('Invalid total amount');\r\n      }\r\n\r\n      // Format items for server with proper price handling\r\n      const formattedItems = cart.map(item => {\r\n        const price = parseFloat(item.price);\r\n        const quantity = parseInt(item.quantity);\r\n        \r\n        if (isNaN(price) || price < 0) {\r\n          throw new Error(`Invalid price for item ${item.name}`);\r\n        }\r\n        if (isNaN(quantity) || quantity < 1) {\r\n          throw new Error(`Invalid quantity for item ${item.name}`);\r\n        }\r\n\r\n        return {\r\n          ...item,\r\n          price: price.toFixed(2),\r\n          quantity: quantity\r\n        };\r\n      });\r\n      \r\n      // Format amounts for Stripe\r\n      const stripeSubtotal = formatAmountForStripe(subtotal);\r\n      const stripeDiscount = formatAmountForStripe(discount);\r\n      const stripeTotal = Math.round(finalTotal * 100);\r\n\r\n      const response = await fetch('http://localhost:3001/api/create-payment-intent', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ \r\n          items: formattedItems,\r\n          userId: user?.id || null,\r\n          couponId: coupon?.id || null,\r\n          subtotal: stripeSubtotal,\r\n          discount: stripeDiscount,\r\n          total: stripeTotal,\r\n          isGuestCheckout: !user,\r\n          userInfo\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.error || errorData.message || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.clientSecret) {\r\n        throw new Error('No client secret received from server');\r\n      }\r\n\r\n      setClientSecret(data.clientSecret);\r\n      setShowPaymentDialog(true);\r\n    } catch (error) {\r\n      console.error('Checkout error:', error);\r\n      setError(error.message || 'Failed to process checkout. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePaymentSuccess = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Confirm the payment\r\n      const response = await fetch('http://localhost:3001/api/confirm-payment', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          paymentMethodId: null,\r\n          clientSecret,\r\n          userInfo\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.error || 'Payment failed');\r\n      }\r\n\r\n      clearCart();\r\n      setShowPaymentDialog(false);\r\n      navigate('/success');\r\n    } catch (error) {\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePaymentError = (error) => {\r\n    setError(error.message);\r\n  };\r\n\r\n  const handleUserInfoChange = (field) => (event) => {\r\n    setUserInfo(prev => ({\r\n      ...prev,\r\n      [field]: event.target.value\r\n    }));\r\n  };\r\n\r\n  if (cart.length === 0) {\r\n    return (\r\n      <Container>\r\n        <Box sx={{ textAlign: 'center', py: 4 }}>\r\n          <Typography variant=\"h5\">Your cart is empty</Typography>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => navigate('/')} sx={{ mt: 2 }}>\r\n            Continue Shopping\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  const subtotal = calculateSubtotal();\r\n  const discount = calculateDiscount(appliedCoupon || validatedCoupon);\r\n  const total = calculateTotal();\r\n  const stripeTotal = Math.round(total * 100);\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" sx={{ my: 4 }}>Your Cart</Typography>\r\n      \r\n      <Snackbar \r\n        open={!!error} \r\n        autoHideDuration={6000} \r\n        onClose={() => setError('')}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      >\r\n        <Alert onClose={() => setError('')} severity=\"error\" sx={{ width: '100%' }}>\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={8}>\r\n          {cart.map((item) => (\r\n            <Card key={item.id} sx={{ mb: 2 }}>\r\n              <CardContent>\r\n                <Grid container alignItems=\"center\" spacing={2}>\r\n                  <Grid item xs={12} sm={3}>\r\n                    {item.image_url && (\r\n                      <img \r\n                        src={item.image_url} \r\n                        alt={item.name} \r\n                        style={{ width: '100%', height: 'auto', borderRadius: '4px' }} \r\n                      />\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={5}>\r\n                    <Typography variant=\"h6\">{item.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {item.price !== undefined && item.price !== null ?\r\n                        item.price.toLocaleString('en-GB', { style: 'currency', currency: 'GBP' }) :\r\n                        ''}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={2}>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <IconButton \r\n                        onClick={() => updateQuantity(item.id, item.quantity - 1)}\r\n                        disabled={item.quantity <= 1}\r\n                      >\r\n                        <RemoveIcon />\r\n                      </IconButton>\r\n                      <Typography sx={{ mx: 1 }}>{item.quantity}</Typography>\r\n                      <IconButton onClick={() => updateQuantity(item.id, item.quantity + 1)}>\r\n                        <AddIcon />\r\n                      </IconButton>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={2} sx={{ textAlign: 'right' }}>\r\n                    <IconButton color=\"error\" onClick={() => removeFromCart(item.id)}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Order Summary\r\n              </Typography>\r\n              \r\n              {/* Coupon Input */}\r\n              <Box sx={{ mb: 2 }}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Coupon Code\"\r\n                  value={couponCode}\r\n                  onChange={(e) => setCouponCode(e.target.value)}\r\n                  error={couponStatus === 'invalid'}\r\n                  helperText={couponError}\r\n                  disabled={!!appliedCoupon}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        {isCheckingCoupon ? (\r\n                          <CircularProgress size={20} />\r\n                        ) : couponStatus === 'valid' ? (\r\n                          <IconButton\r\n                            onClick={handleApplyCoupon}\r\n                            color=\"success\"\r\n                          >\r\n                            <CheckCircleIcon />\r\n                          </IconButton>\r\n                        ) : couponStatus === 'invalid' ? (\r\n                          <IconButton color=\"error\">\r\n                            <ErrorIcon />\r\n                          </IconButton>\r\n                        ) : (\r\n                          <IconButton\r\n                            onClick={handleApplyCoupon}\r\n                            disabled={!couponCode}\r\n                          >\r\n                            <LocalOfferIcon />\r\n                          </IconButton>\r\n                        )}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n                {(appliedCoupon || validatedCoupon) && (\r\n                  <Box sx={{ mt: 1, p: 1, bgcolor: 'success.light', borderRadius: 1 }}>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                      <Typography variant=\"body2\" color=\"success.contrastText\">\r\n                        Coupon {appliedCoupon ? 'applied' : 'available'}: {(appliedCoupon || validatedCoupon).code}\r\n                      </Typography>\r\n                      {appliedCoupon && (\r\n                        <IconButton \r\n                          size=\"small\" \r\n                          onClick={handleRemoveCoupon}\r\n                          sx={{ color: 'success.contrastText' }}\r\n                        >\r\n                          <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                      )}\r\n                    </Box>\r\n                    <Typography variant=\"body2\" color=\"success.contrastText\">\r\n                      {(appliedCoupon || validatedCoupon).discount_type === 'percentage' \r\n                        ? `${(appliedCoupon || validatedCoupon).discount_value}% off`\r\n                        : `£${(appliedCoupon || validatedCoupon).discount_value} off`}\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n\r\n              <Divider sx={{ my: 2 }} />\r\n\r\n              <Box sx={{ mt: 2 }}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                  <Typography variant=\"body1\">Subtotal:</Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {subtotal.toLocaleString('en-GB', { style: 'currency', currency: 'GBP' })}\r\n                  </Typography>\r\n                </Box>\r\n                \r\n                {(appliedCoupon || validatedCoupon) && (\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                    <Typography variant=\"body1\" color=\"success.main\">Discount:</Typography>\r\n                    <Typography variant=\"body1\" color=\"success.main\">\r\n                      -{discount.toLocaleString('en-GB', { style: 'currency', currency: 'GBP' })}\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n\r\n                <Divider sx={{ my: 1 }} />\r\n                \r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                  <Typography variant=\"h6\">Total:</Typography>\r\n                  <Typography variant=\"h6\">\r\n                    {total.toLocaleString('en-GB', { style: 'currency', currency: 'GBP' })}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\" \r\n                  fullWidth \r\n                  onClick={handleCheckout}\r\n                  disabled={loading}\r\n                  sx={{ mt: 2 }}\r\n                >\r\n                  {loading ? 'Processing...' : 'Checkout'}\r\n                </Button>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Payment Dialog */}\r\n      <Dialog \r\n        open={showPaymentDialog} \r\n        onClose={() => setShowPaymentDialog(false)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Complete Your Order</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"h6\" gutterBottom>Contact Information</Typography>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Full Name\"\r\n                value={userInfo.name}\r\n                onChange={handleUserInfoChange('name')}\r\n                margin=\"normal\"\r\n                required\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                value={userInfo.email}\r\n                onChange={handleUserInfoChange('email')}\r\n                margin=\"normal\"\r\n                required\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone\"\r\n                value={userInfo.phone}\r\n                onChange={handleUserInfoChange('phone')}\r\n                margin=\"normal\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography variant=\"h6\" gutterBottom>Delivery Address</Typography>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Address\"\r\n                value={userInfo.address}\r\n                onChange={handleUserInfoChange('address')}\r\n                margin=\"normal\"\r\n                required\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"City\"\r\n                value={userInfo.city}\r\n                onChange={handleUserInfoChange('city')}\r\n                margin=\"normal\"\r\n                required\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Postal Code\"\r\n                value={userInfo.postalCode}\r\n                onChange={handleUserInfoChange('postalCode')}\r\n                margin=\"normal\"\r\n                required\r\n              />\r\n              <FormControl fullWidth margin=\"normal\">\r\n                <InputLabel>Country</InputLabel>\r\n                <Select\r\n                  value={userInfo.country}\r\n                  onChange={handleUserInfoChange('country')}\r\n                  label=\"Country\"\r\n                  required\r\n                >\r\n                  <MenuItem value=\"GB\">United Kingdom</MenuItem>\r\n                  <MenuItem value=\"US\">United States</MenuItem>\r\n                  {/* Add more countries as needed */}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h6\" gutterBottom>Payment Information</Typography>\r\n              {clientSecret && (\r\n                <Elements\r\n                  stripe={stripePromise}\r\n                  options={{\r\n                    clientSecret,\r\n                    appearance: {\r\n                      theme: 'stripe',\r\n                      variables: {\r\n                        colorPrimary: '#1976d2',\r\n                      },\r\n                    },\r\n                  }}\r\n                >\r\n                  <PaymentForm\r\n                    userInfo={userInfo}\r\n                    onSuccess={handlePaymentSuccess}\r\n                    onError={handlePaymentError}\r\n                    totalPence={stripeTotal}\r\n                  />\r\n                </Elements>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowPaymentDialog(false)}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart; "],"names":["stripePromise","loadStripe","PaymentForm","_ref","userInfo","onSuccess","onError","totalPence","stripe","useStripe","elements","useElements","error","setError","useState","processing","setProcessing","paymentRequest","setPaymentRequest","isReady","setIsReady","useEffect","pr","country","currency","total","label","amount","requestPayerName","requestPayerEmail","canMakePayment","then","result","_jsxs","Box","sx","width","children","mb","_jsx","PaymentRequestButtonElement","options","Typography","variant","mt","onSubmit","async","event","preventDefault","submitError","confirmPayment","confirmParams","return_url","concat","window","location","origin","receipt_email","email","shipping","name","address","line1","city","postal_code","postalCode","message","err","style","PaymentElement","onReady","console","log","onChange","e","layout","type","defaultCollapsed","Alert","severity","Button","color","fullWidth","disabled","CircularProgress","size","Cart","cart","removeFromCart","updateQuantity","clearCart","useCart","navigate","useNavigate","user","useAuth","loading","setLoading","couponCode","setCouponCode","appliedCoupon","setAppliedCoupon","couponError","setCouponError","isCheckingCoupon","setIsCheckingCoupon","couponStatus","setCouponStatus","validatedCoupon","setValidatedCoupon","showPaymentDialog","setShowPaymentDialog","clientSecret","setClientSecret","setUserInfo","phone","calculateSubtotal","Number","reduce","sum","item","itemTotal","price","quantity","toFixed","calculateDiscount","coupon","subtotal","discount","discount_type","discount_value","max_discount","Math","min","calculateTotal","formatAmountForStripe","amountInPence","round","isInteger","Error","debouncedCheckCoupon","useCallback","code","data","supabase","from","select","ilike","toUpperCase","eq","single","now","Date","startDate","start_date","endDate","end_date","min_order_amount","timer","setTimeout","clearTimeout","handleApplyCoupon","handleUserInfoChange","field","prev","_objectSpread","target","value","length","Container","textAlign","py","onClick","stripeTotal","my","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Grid","container","spacing","xs","md","map","Card","CardContent","alignItems","sm","image_url","src","alt","height","borderRadius","undefined","toLocaleString","display","IconButton","id","RemoveIcon","mx","AddIcon","DeleteIcon","gutterBottom","TextField","helperText","InputProps","endAdornment","InputAdornment","position","CheckCircleIcon","ErrorIcon","LocalOfferIcon","p","bgcolor","justifyContent","handleRemoveCoupon","fontSize","Divider","auth","getUser","finalTotal","formattedItems","parseFloat","parseInt","isNaN","stripeSubtotal","stripeDiscount","response","fetch","method","headers","credentials","body","JSON","stringify","items","userId","couponId","isGuestCheckout","ok","errorData","json","catch","status","Dialog","maxWidth","DialogTitle","DialogContent","margin","required","FormControl","InputLabel","Select","MenuItem","Elements","appearance","theme","variables","colorPrimary","paymentMethodId","DialogActions"],"sourceRoot":""}