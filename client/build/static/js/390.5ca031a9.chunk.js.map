{"version":3,"file":"static/js/390.5ca031a9.chunk.js","mappings":"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","sources":["pages/Register.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Typography, TextField, Button, Box, Link, Alert } from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { supabase } from '../supabaseClient';\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    if (!email || !password || !confirmPassword) {\r\n      setError('Please fill in all fields.');\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const { error } = await supabase.auth.signUp({\r\n      email,\r\n      password\r\n    });\r\n    setLoading(false);\r\n    if (error) {\r\n      setError(error.message);\r\n    } else {\r\n      setSuccess('Registration successful! Please check your email to confirm your account.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ mt: 8 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\r\n        Register\r\n      </Typography>\r\n      <Box component=\"form\" sx={{ mt: 3 }} onSubmit={handleSubmit}>\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n        {success && <Alert severity=\"success\">{success}</Alert>}\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"new-password\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"confirmPassword\"\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          id=\"confirmPassword\"\r\n          autoComplete=\"new-password\"\r\n          value={confirmPassword}\r\n          onChange={e => setConfirmPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Signing Up...' : 'Sign Up'}\r\n        </Button>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <Link component={RouterLink} to=\"/login\" variant=\"body2\">\r\n            {\"Already have an account? Sign In\"}\r\n          </Link>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register; ","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { getPath } from '@mui/system';\nimport { alpha } from '@mui/system/colorManipulator';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["Register","email","setEmail","useState","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","loading","setLoading","_jsxs","Container","maxWidth","sx","mt","children","_jsx","Typography","variant","component","align","gutterBottom","Box","onSubmit","async","e","preventDefault","supabase","auth","signUp","message","Alert","severity","TextField","margin","required","fullWidth","id","label","name","autoComplete","value","onChange","target","type","Button","mb","disabled","textAlign","Link","RouterLink","to","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","_ref","theme","ownerState","transformedColor","color","transformDeprecatedColors","getPath","concat","channelColor","alpha","_excluded","LinkRoot","styled","overridesResolver","props","styles","root","capitalize","underline","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","React","inProps","ref","useDefaultProps","className","onBlur","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","useIsFocusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","clsx","event","current","Object","keys","includes","Array","isArray"],"sourceRoot":""}