{"version":3,"file":"static/js/936.3ef9b09d.chunk.js","mappings":"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","sources":["pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n} from '@mui/material';\r\nimport { useMenu } from '../context/MenuContext';\r\nimport { useCart } from '../context/CartContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { debounce } from 'lodash';\r\n\r\nconst Home = () => {\r\n  const { menuItems, categories, getItemsForCategory, menuItemCategories, menuItemSubcategories, categorySubcategoryLinks } = useMenu();\r\n  const { cart, addToCart, updateQuantity, removeFromCart } = useCart();\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Only show categories (type === 'category')\r\n  const mainCategories = categories.filter(cat => cat.type === 'category');\r\n\r\n  useEffect(() => {\r\n    if (mainCategories.length > 0 && !selectedCategory) {\r\n      setSelectedCategory(mainCategories[0].id);\r\n    }\r\n  }, [mainCategories, selectedCategory]);\r\n\r\n  // Get items for selected category using join table\r\n  const items = selectedCategory ? getItemsForCategory(selectedCategory) : [];\r\n\r\n  // Get subcategories for the selected category using the join table from context\r\n  const categorySubcategoryIds = categorySubcategoryLinks\r\n    .filter(link => String(link.category_id) === String(selectedCategory))\r\n    .map(link => link.subcategory_id);\r\n  const categorySubcategories = categories\r\n    .filter(cat => cat.type === 'subcategory' && categorySubcategoryIds.includes(cat.id))\r\n    .sort((a, b) => (a.sort_order ?? 0) - (b.sort_order ?? 0));\r\n\r\n  // Group items by subcategory (support multiple subcategories per item)\r\n  const itemsBySubcategory = {};\r\n  const subcategoryIdToName = {};\r\n  categorySubcategories.forEach(sub => {\r\n    subcategoryIdToName[sub.id] = sub.name;\r\n  });\r\n  items.forEach(item => {\r\n    // Find all subcategory links for this item that belong to the current category's subcategories\r\n    const subLinks = menuItemSubcategories.filter(link => link.menu_item_id === item.id && categorySubcategories.some(sub => sub.id === link.subcategory_id));\r\n    if (subLinks.length > 0) {\r\n      subLinks.forEach(link => {\r\n        const subName = subcategoryIdToName[link.subcategory_id];\r\n        if (!itemsBySubcategory[subName]) itemsBySubcategory[subName] = [];\r\n        // Avoid duplicates\r\n        if (!itemsBySubcategory[subName].some(i => i.id === item.id)) {\r\n          itemsBySubcategory[subName].push(item);\r\n        }\r\n      });\r\n    } else {\r\n      // No subcategory for this category, put in 'Other'\r\n      if (!itemsBySubcategory['Other']) itemsBySubcategory['Other'] = [];\r\n      itemsBySubcategory['Other'].push(item);\r\n    }\r\n  });\r\n\r\n  const debouncedSearch = debounce((query) => { /* fetch from DB */ }, 300);\r\n\r\n  // Debug output\r\n  const menuItemIds = menuItemCategories\r\n    .filter(link => String(link.category_id) === String(selectedCategory))\r\n    .map(link => String(link.menu_item_id));\r\n  console.log('selectedCategory:', selectedCategory);\r\n  console.log('menuItemCategories:', menuItemCategories);\r\n  console.log('menuItemIds:', menuItemIds);\r\n  console.log('items:', items);\r\n  console.log('menuItems:', menuItems);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ pb: 10 }}>\r\n      {mainCategories.length === 0 || !selectedCategory ? (\r\n        <Typography align=\"center\" color=\"text.secondary\" sx={{ mt: 4 }}>\r\n          No categories found.\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          {/* Category Tabs */}\r\n          <Tabs\r\n            value={selectedCategory}\r\n            onChange={(e, val) => setSelectedCategory(val)}\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            sx={{ mb: 2 }}\r\n          >\r\n            {mainCategories.map(cat => (\r\n              <Tab key={cat.id} label={cat.name} value={cat.id} />\r\n            ))}\r\n          </Tabs>\r\n\r\n          {/* Menu Items */}\r\n          {items.length === 0 ? (\r\n            <Typography align=\"center\" color=\"text.secondary\" sx={{ mt: 4 }}>\r\n              No items found for this category.\r\n            </Typography>\r\n          ) : (\r\n            <>\r\n              {categorySubcategories.map(subcategory => {\r\n                const subcategoryItems = itemsBySubcategory[subcategory.name] || [];\r\n                if (subcategoryItems.length === 0) return null;\r\n                return (\r\n                  <Box key={subcategory.name} sx={{ mb: 4 }}>\r\n                    <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2, color: 'primary.main' }}>\r\n                      {subcategory.name}\r\n                    </Typography>\r\n                    {subcategoryItems.map(item => {\r\n                      const cartItem = cart.find(ci => ci.id === item.id);\r\n                      return (\r\n                        <Paper key={item.id} sx={{ display: 'flex', alignItems: 'center', mb: 2, p: 2 }}>\r\n                          <Box sx={{ flex: 1 }}>\r\n                            <Typography variant=\"h6\" sx={{ fontWeight: 700 }}>{item.name}</Typography>\r\n                            <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                              £{item.price?.toFixed(2)}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                              {item.description}\r\n                            </Typography>\r\n                          </Box>\r\n                          <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', ml: 2 }}>\r\n                            {item.image_url && (\r\n                              <Box\r\n                                component=\"img\"\r\n                                src={item.image_url}\r\n                                alt={item.name}\r\n                                sx={{ width: 90, height: 90, objectFit: 'cover', borderRadius: 2, mb: 1 }}\r\n                              />\r\n                            )}\r\n                            {cartItem && cartItem.quantity > 0 ? (\r\n                              <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>\r\n                                <Button\r\n                                  size=\"small\"\r\n                                  variant=\"outlined\"\r\n                                  sx={{ minWidth: 32, px: 0 }}\r\n                                  onClick={() => {\r\n                                    if (cartItem.quantity === 1) {\r\n                                      removeFromCart(item.id);\r\n                                    } else {\r\n                                      updateQuantity(item.id, cartItem.quantity - 1);\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  -\r\n                                </Button>\r\n                                <Typography sx={{ mx: 1, minWidth: 20, textAlign: 'center' }}>{cartItem.quantity}</Typography>\r\n                                <Button\r\n                                  size=\"small\"\r\n                                  variant=\"outlined\"\r\n                                  sx={{ minWidth: 32, px: 0 }}\r\n                                  onClick={() => updateQuantity(item.id, cartItem.quantity + 1)}\r\n                                >\r\n                                  +\r\n                                </Button>\r\n                              </Box>\r\n                            ) : (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                sx={{ mt: 1, fontSize: '0.8rem', px: 2, py: 0.5 }}\r\n                                onClick={() => addToCart(item)}\r\n                              >\r\n                                Add to Cart\r\n                              </Button>\r\n                            )}\r\n                          </Box>\r\n                        </Paper>\r\n                      );\r\n                    })}\r\n                  </Box>\r\n                );\r\n              })}\r\n              {(() => {\r\n                const otherItems = itemsBySubcategory['Other'] || [];\r\n                if (otherItems.length === 0) return null;\r\n                return (\r\n                  <Box sx={{ mb: 4 }}>\r\n                    <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2, color: 'primary.main' }}>\r\n                      Other\r\n                    </Typography>\r\n                    {otherItems.map(item => {\r\n                      const cartItem = cart.find(ci => ci.id === item.id);\r\n                      return (\r\n                        <Paper key={item.id} sx={{ display: 'flex', alignItems: 'center', mb: 2, p: 2 }}>\r\n                          <Box sx={{ flex: 1 }}>\r\n                            <Typography variant=\"h6\" sx={{ fontWeight: 700 }}>{item.name}</Typography>\r\n                            <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\r\n                              £{item.price?.toFixed(2)}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\" noWrap>\r\n                              {item.description}\r\n                            </Typography>\r\n                          </Box>\r\n                          <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', ml: 2 }}>\r\n                            {item.image_url && (\r\n                              <Box\r\n                                component=\"img\"\r\n                                src={item.image_url}\r\n                                alt={item.name}\r\n                                sx={{ width: 90, height: 90, objectFit: 'cover', borderRadius: 2, mb: 1 }}\r\n                              />\r\n                            )}\r\n                            {cartItem && cartItem.quantity > 0 ? (\r\n                              <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>\r\n                                <Button\r\n                                  size=\"small\"\r\n                                  variant=\"outlined\"\r\n                                  sx={{ minWidth: 32, px: 0 }}\r\n                                  onClick={() => {\r\n                                    if (cartItem.quantity === 1) {\r\n                                      removeFromCart(item.id);\r\n                                    } else {\r\n                                      updateQuantity(item.id, cartItem.quantity - 1);\r\n                                    }\r\n                                  }}\r\n                                >\r\n                                  -\r\n                                </Button>\r\n                                <Typography sx={{ mx: 1, minWidth: 20, textAlign: 'center' }}>{cartItem.quantity}</Typography>\r\n                                <Button\r\n                                  size=\"small\"\r\n                                  variant=\"outlined\"\r\n                                  sx={{ minWidth: 32, px: 0 }}\r\n                                  onClick={() => updateQuantity(item.id, cartItem.quantity + 1)}\r\n                                >\r\n                                  +\r\n                                </Button>\r\n                              </Box>\r\n                            ) : (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                sx={{ mt: 1, fontSize: '0.8rem', px: 2, py: 0.5 }}\r\n                                onClick={() => addToCart(item)}\r\n                              >\r\n                                Add to Cart\r\n                              </Button>\r\n                            )}\r\n                          </Box>\r\n                        </Paper>\r\n                      );\r\n                    })}\r\n                  </Box>\r\n                );\r\n              })()}\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      {/* Go to Basket Button */}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        sx={{\r\n          position: 'fixed',\r\n          left: 0,\r\n          bottom: 0,\r\n          width: '100vw',\r\n          borderRadius: 0,\r\n          py: 2,\r\n          zIndex: 1200,\r\n        }}\r\n        onClick={() => navigate('/cart')}\r\n      >\r\n        Go to Basket\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home; \r\n"],"names":["Home","menuItems","categories","getItemsForCategory","menuItemCategories","menuItemSubcategories","categorySubcategoryLinks","useMenu","cart","addToCart","updateQuantity","removeFromCart","useCart","selectedCategory","setSelectedCategory","useState","navigate","useNavigate","mainCategories","filter","cat","type","useEffect","length","id","items","categorySubcategoryIds","link","String","category_id","map","subcategory_id","categorySubcategories","includes","sort","a","b","_a$sort_order","_b$sort_order","sort_order","itemsBySubcategory","subcategoryIdToName","forEach","sub","name","item","subLinks","menu_item_id","some","subName","i","push","debounce","query","menuItemIds","console","log","_jsxs","Container","maxWidth","sx","pb","children","_Fragment","_jsx","Tabs","value","onChange","e","val","variant","scrollButtons","mb","Tab","label","Typography","align","color","mt","subcategory","subcategoryItems","Box","fontWeight","_item$price","cartItem","find","ci","Paper","display","alignItems","p","flex","price","toFixed","noWrap","description","flexDirection","ml","image_url","component","src","alt","width","height","objectFit","borderRadius","quantity","Button","size","minWidth","px","onClick","mx","textAlign","fontSize","py","otherItems","_item$price2","fullWidth","position","left","bottom","zIndex"],"sourceRoot":""}